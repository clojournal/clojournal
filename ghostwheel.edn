#:ghostwheel.core{;; Evaluation trace verbosity level. 0 disables all tracing code generation.
                  :trace           0

                  ;; #RRGGBB, #RGB, or keyword from the `ghostwheel-colors` map.
                  :trace-color     :violet

                  ;; When disabled no checks of any kind are
                  ;; performed and no test code is generated.
                  :check           true

                  ;; Determines whether Ghostwheel should warn on missing fspecs
                  ;; and plain (non-Ghostwheel) `defn` usage. When enabled on a
                  ;; namespace or higher level, you can exclude individual `defn`s or
                  ;; `declare`s by setting it to false in their respective metadata
                  :check-coverage  false

                  ;; Disable side effect detection
                  :ignore-fx       false

                  ;; Number of generative tests performed when quick-checking (on hot-reload)
                  :num-tests       0

                  ;; Number of generative tests performed when checking extensively (test suite)
                  :num-tests-ext   100

                  ;; Determines which of the above two options should take
                  ;; precedence. Set to true in your test build configuration.
                  :extensive-tests false

                  ;; Ghostwheel generates standard `defn` function definitions
                  ;; by default. If you require composability with other
                  ;; `defn`-like macros, you can have Ghostwheel desugar to
                  ;; them instead by setting the macro name as a string here.
                  :defn-macro      nil

                  ;; Spec-instrument functions on namespace reload.
                  :instrument      false

                  ;; Spec-instrument functions on namespace reload using
                  ;; orchestra, which spec-checks the output in addition to
                  ;; the input. Use either this or `::instrument`, not both.
                  :outstrument     true

                  ;; The following options can only be set in
                  ;; the global Ghostwheel configuration layer

                  ;; Nilable vector of qualified external namespaces
                  ;; or functions (unquoted) to spec-instrument before
                  ;; and unstrument after testing to catch incorrect
                  ;; function calls at test time without the runtime
                  ;; performance impact. Fspecs must be defined for
                  ;; the relevant functions in a `require`d namespace
                  ;; using either `s/fdef` or Ghostwheel's `>fdef`.
                  :extrument       nil

                  ;; Nilable map of Expound configuration options.
                  ;; If not nil, the spec printer will be set to
                  ;; expound's with the given configuration options.
                  :expound         {:show-valid-values? true
                                    :print-specs?       true}

                  ;; Output channel for tracing and check
                  ;; reports. Only `:repl` and `:js-console`
                  ;; are supported at the moment. The option is
                  ;; ignored on Clojure where only `:repl` is used.
                  :report-output   :js-console}
